transport {
  # tcp udt unix-domain-socket
  type = "TCP"
  #NIO NATIVE
  server = "NIO"
  #enable heartbeat
  heartbeat = true
  #thread factory for netty
  thread-factory {
    boss-thread-prefix = "NettyBoss"
    worker-thread-prefix = "NettyServerNIOWorker"
    server-executor-thread-prefix = "NettyServerBizHandler"
    share-boss-worker = false
    client-selector-thread-prefix = "NettyClientSelector"
    client-selector-thread-size = 1
    client-worker-thread-prefix = "NettyClientWorkerThread"
    # netty boss thread size,will not be used for UDT
    boss-thread-size = 1
    #auto default pin or 8
    worker-thread-size = 8
  }
  shutdown {
    # when destroy server, wait seconds
    wait = 3
  }
  serialization = "seata"
  compressor = "none"
}

service {
  #vgroup->rgroup
  vgroupMapping.nexus-tx-group = "default"
  #only support single node
  default.grouplist = "127.0.0.1:8091"
  #degrade current not support
  enableDegrade = false
  #disable
  disable = false
  #unit ms,s,m,h,d represents milliseconds, seconds, minutes, hours, days, default permanent
  max.commit.retry.timeout = "-1"
  max.rollback.retry.timeout = "-1"
  disableGlobalTransaction = false
}

client {
  async.commit.buffer.limit = 10000
  lock {
    retry.internal = 10
    retry.times = 30
    retry.policy.branch-rollback-on-conflict = true
  }
  report.retry.count = 5
  table.meta.check.enable = false
  report.success.enable = false
}

## transaction log store
store {
  ## store mode: file„ÄÅdb
  mode = "db"
  ## file store
  file {
    dir = "sessionStore"
  }

  ## database store
  db {
    ## the implement of javax.sql.DataSource, such as DruidDataSource(druid)/BasicDataSource(dbcp) etc.
    datasource = "dbcp"
    ## mysql/oracle/h2/oceanbase etc.
    db-type = "mysql"
    driver-class-name = "com.mysql.jdbc.Driver"
    url = "jdbc:mysql://127.0.0.1:3306/seata"
    user = "mysql"
    password = "mysql"
    min-conn = 1
    max-conn = 3
    global.table = "global_table"
    branch.table = "branch_table"
    lock-table = "lock_table"
    query-limit = 100
  }
}

server {
  service-port = 8091
  node = "default_node"
}

recovery {
  #schedule committing retry period in milliseconds
  committing-retry-period = 1000
  #schedule aborting retry period in milliseconds
  aborting-retry-period = 1000
  #schedule default branch log delete period in milliseconds
  default-branch-log-delete-period = 1000
  #schedule default branch log delete period in milliseconds
  default-branch-log-delete-period = 1000
  #schedule default global session delete period in milliseconds
  default-global-session-delete-period = 1000
  #default branch log delete period in milliseconds
  default-branch-log-delete-period = 1000
  #default global session delete period in milliseconds
  default-global-session-delete-period = 1000
}